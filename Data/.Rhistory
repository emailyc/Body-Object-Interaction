for (trial in 1:nrow(report))
{
#for each trial
trial_DF <- pressure_data[pressure_data$trial == trial,]
run_length <- rle(as.character(trial_DF$Stimuli))
if(length(run_length$lengths)!=2)
{
report[trial, c("correctness", "rt", "time_to_peak", "pressure_duration")] <- c(0,-1,-1,-1)
next
}
#whether correct response was made
report[trial, "correctness"] <- check_correctness(trial_stimuli[trial], max(trial_DF$Left.Reading), max(trial_DF$Right.Reading))
#calculate time between end of stimuli and start of pressure
row_of_final_stimuli <- run_length$length[1]
row_of_first_response <- row_of_final_stimuli + 1
stimuli_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_final_stimuli]
pressure_start_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_first_response]
report[trial, "rt"] <- pressure_start_time -  stimuli_end_time
#Now only look at pressure applied after the stimulus finished playing
trial_DF <- filter(trial_DF, Stimuli == -1)
#calculate time to peak pressure
row_of_peak_pressure <- with(trial_DF, which.max(Left.Reading+Right.Reading))
peak_pressure_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_peak_pressure]
report[trial, "time_to_peak"] <- peak_pressure_time - pressure_start_time
#calculate how long pressure was applied for
pressure_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[nrow(trial_DF)]
report[trial, "pressure_duration"] <- pressure_end_time - pressure_start_time
}
report$parti_number <- participant_number
reports[[1 + length(reports)]] <- report
}
reports <- list()
for (dataset in 1:12)
{
file_path <- paste0(dataset, ".txt")
pressure_data <- read.csv(sep = ',', file_path)
pressure_data = pressure_data[, c(1, 2, 4, 5)]
colnames(pressure_data) <- c("Parti_number", "Left.Reading", "Right.Reading", "Stimuli", "Experiment.Time.Clock..Micro.Sec.")
pressure_data = filter(pressure_data, Left.Reading > 0 | Right.Reading > 0 | Stimuli != -1)
pressure_data$trial <- 1
#add trial number
for (row in 2:nrow(pressure_data))
{
if(pressure_data$Stimuli[row] == pressure_data$Stimuli[row - 1] || pressure_data$Stimuli[row] == -1)
{
pressure_data[row, "trial"] <- pressure_data$trial[row - 1]
} else {
pressure_data[row, "trial"] <- pressure_data$trial[row - 1] + 1
}
}
#remove first 4 trials which are study phases; last trial failed
pressure_data = filter(pressure_data, (5 <= trial) & (trial < max(pressure_data$trial)))
#shift start time
pressure_data$Experiment.Time.Clock..Micro.Sec. <- pressure_data$Experiment.Time.Clock..Micro.Sec. - pressure_data$Experiment.Time.Clock..Micro.Sec.[1]
#shift trial number
pressure_data$trial <- pressure_data$trial - 4
#
trial_stimuli = rle(as.character(pressure_data$Stimuli))$values
trial_stimuli <- trial_stimuli[trial_stimuli != "-1"]
participant_number <- as.integer(strsplit(basename(file_path), "\\.")[[1]][1])
report <- data.frame(stimuli = trial_stimuli, correctness = 0, rt = 0, time_to_peak = 0, pressure_duration = 0)
check_correctness <- getcorrectness_func(participant_number)
for (trial in 1:nrow(report))
{
#for each trial
trial_DF <- pressure_data[pressure_data$trial == trial,]
run_length <- rle(as.character(trial_DF$Stimuli))
if(length(run_length$lengths)!=2)
{
report[trial, c("correctness", "rt", "time_to_peak", "pressure_duration")] <- c(0,-1,-1,-1)
next
}
#whether correct response was made
report[trial, "correctness"] <- check_correctness(trial_stimuli[trial], max(trial_DF$Left.Reading), max(trial_DF$Right.Reading))
#calculate time between end of stimuli and start of pressure
row_of_final_stimuli <- run_length$length[1]
row_of_first_response <- row_of_final_stimuli + 1
stimuli_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_final_stimuli]
pressure_start_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_first_response]
report[trial, "rt"] <- pressure_start_time -  stimuli_end_time
#Now only look at pressure applied after the stimulus finished playing
trial_DF <- filter(trial_DF, Stimuli == -1)
#calculate time to peak pressure
row_of_peak_pressure <- with(trial_DF, which.max(Left.Reading+Right.Reading))
peak_pressure_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_peak_pressure]
report[trial, "time_to_peak"] <- peak_pressure_time - pressure_start_time
#calculate how long pressure was applied for
pressure_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[nrow(trial_DF)]
report[trial, "pressure_duration"] <- pressure_end_time - pressure_start_time
}
#report$parti_number <- participant_number
reports[[1 + length(reports)]] <- report
}
file_path <- paste0(dataset, ".txt")
pressure_data <- read.csv(sep = ',', file_path)
pressure_data = pressure_data[, c(1, 2, 4, 5)]
colnames(pressure_data) <- c("Parti_number", "Left.Reading", "Right.Reading", "Stimuli", "Experiment.Time.Clock..Micro.Sec.")
pressure_data = filter(pressure_data, Left.Reading > 0 | Right.Reading > 0 | Stimuli != -1)
file_path <- paste0(dataset, ".txt")
pressure_data <- read.csv(sep = ',', file_path)
pressure_data = pressure_data[, c(1, 2, 4, 5)]
reports <- list()
for (dataset in 1:12)
{
file_path <- paste0(dataset, ".txt")
pressure_data <- read.csv(sep = ',', file_path)
pressure_data = pressure_data[, c(1, 2, 4, 5)]
colnames(pressure_data) <- c("Left.Reading", "Right.Reading", "Stimuli", "Experiment.Time.Clock..Micro.Sec.")
pressure_data = filter(pressure_data, Left.Reading > 0 | Right.Reading > 0 | Stimuli != -1)
pressure_data$trial <- 1
#add trial number
for (row in 2:nrow(pressure_data))
{
if(pressure_data$Stimuli[row] == pressure_data$Stimuli[row - 1] || pressure_data$Stimuli[row] == -1)
{
pressure_data[row, "trial"] <- pressure_data$trial[row - 1]
} else {
pressure_data[row, "trial"] <- pressure_data$trial[row - 1] + 1
}
}
#remove first 4 trials which are study phases; last trial failed
pressure_data = filter(pressure_data, (5 <= trial) & (trial < max(pressure_data$trial)))
#shift start time
pressure_data$Experiment.Time.Clock..Micro.Sec. <- pressure_data$Experiment.Time.Clock..Micro.Sec. - pressure_data$Experiment.Time.Clock..Micro.Sec.[1]
#shift trial number
pressure_data$trial <- pressure_data$trial - 4
#
trial_stimuli = rle(as.character(pressure_data$Stimuli))$values
trial_stimuli <- trial_stimuli[trial_stimuli != "-1"]
participant_number <- as.integer(strsplit(basename(file_path), "\\.")[[1]][1])
report <- data.frame(stimuli = trial_stimuli, correctness = 0, rt = 0, time_to_peak = 0, pressure_duration = 0)
check_correctness <- getcorrectness_func(participant_number)
for (trial in 1:nrow(report))
{
#for each trial
trial_DF <- pressure_data[pressure_data$trial == trial,]
run_length <- rle(as.character(trial_DF$Stimuli))
if(length(run_length$lengths)!=2)
{
report[trial, c("correctness", "rt", "time_to_peak", "pressure_duration")] <- c(0,-1,-1,-1)
next
}
#whether correct response was made
report[trial, "correctness"] <- check_correctness(trial_stimuli[trial], max(trial_DF$Left.Reading), max(trial_DF$Right.Reading))
#calculate time between end of stimuli and start of pressure
row_of_final_stimuli <- run_length$length[1]
row_of_first_response <- row_of_final_stimuli + 1
stimuli_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_final_stimuli]
pressure_start_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_first_response]
report[trial, "rt"] <- pressure_start_time -  stimuli_end_time
#Now only look at pressure applied after the stimulus finished playing
trial_DF <- filter(trial_DF, Stimuli == -1)
#calculate time to peak pressure
row_of_peak_pressure <- with(trial_DF, which.max(Left.Reading+Right.Reading))
peak_pressure_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_peak_pressure]
report[trial, "time_to_peak"] <- peak_pressure_time - pressure_start_time
#calculate how long pressure was applied for
pressure_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[nrow(trial_DF)]
report[trial, "pressure_duration"] <- pressure_end_time - pressure_start_time
}
#report$parti_number <- participant_number
reports[[1 + length(reports)]] <- report
}
reports <- list()
for (dataset in 1:12)
{
file_path <- paste0(dataset, ".txt")
pressure_data <- read.csv(sep = ',', file_path)
pressure_data = pressure_data[, c(1, 2, 4, 5)]
colnames(pressure_data) <- c("Left.Reading", "Right.Reading", "Stimuli", "Experiment.Time.Clock..Micro.Sec.")
pressure_data = filter(pressure_data, Left.Reading > 0 | Right.Reading > 0 | Stimuli != -1)
pressure_data$trial <- 1
#add trial number
for (row in 2:nrow(pressure_data))
{
if(pressure_data$Stimuli[row] == pressure_data$Stimuli[row - 1] || pressure_data$Stimuli[row] == -1)
{
pressure_data[row, "trial"] <- pressure_data$trial[row - 1]
} else {
pressure_data[row, "trial"] <- pressure_data$trial[row - 1] + 1
}
}
#remove first 4 trials which are study phases; last trial failed
pressure_data = filter(pressure_data, (5 <= trial) & (trial < max(pressure_data$trial)))
#shift start time
pressure_data$Experiment.Time.Clock..Micro.Sec. <- pressure_data$Experiment.Time.Clock..Micro.Sec. - pressure_data$Experiment.Time.Clock..Micro.Sec.[1]
#shift trial number
pressure_data$trial <- pressure_data$trial - 4
#
trial_stimuli = rle(as.character(pressure_data$Stimuli))$values
trial_stimuli <- trial_stimuli[trial_stimuli != "-1"]
participant_number <- as.integer(strsplit(basename(file_path), "\\.")[[1]][1])
report <- data.frame(stimuli = trial_stimuli, correctness = 0, rt = 0, time_to_peak = 0, pressure_duration = 0)
check_correctness <- getcorrectness_func(participant_number)
for (trial in 1:nrow(report))
{
#for each trial
trial_DF <- pressure_data[pressure_data$trial == trial,]
run_length <- rle(as.character(trial_DF$Stimuli))
if(length(run_length$lengths)!=2)
{
report[trial, c("correctness", "rt", "time_to_peak", "pressure_duration")] <- c(0,-1,-1,-1)
next
}
#whether correct response was made
report[trial, "correctness"] <- check_correctness(trial_stimuli[trial], max(trial_DF$Left.Reading), max(trial_DF$Right.Reading))
#calculate time between end of stimuli and start of pressure
row_of_final_stimuli <- run_length$length[1]
row_of_first_response <- row_of_final_stimuli + 1
stimuli_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_final_stimuli]
pressure_start_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_first_response]
report[trial, "rt"] <- pressure_start_time -  stimuli_end_time
#Now only look at pressure applied after the stimulus finished playing
trial_DF <- filter(trial_DF, Stimuli == -1)
#calculate time to peak pressure
row_of_peak_pressure <- with(trial_DF, which.max(Left.Reading+Right.Reading))
peak_pressure_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[row_of_peak_pressure]
report[trial, "time_to_peak"] <- peak_pressure_time - pressure_start_time
#calculate how long pressure was applied for
pressure_end_time <- trial_DF$Experiment.Time.Clock..Micro.Sec.[nrow(trial_DF)]
report[trial, "pressure_duration"] <- pressure_end_time - pressure_start_time
}
report$parti_number <- participant_number
reports[[1 + length(reports)]] <- report
}
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(combined, aes(x=rt, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
group_mean
combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness, na.rm = TRUE))
head(combined)
combined <- reports[[1]]
for (i in 2:12)
{
combined <- rbind(combined, reports[[i]] )
}
#colnames(combined) <- c("correct", "rt", "time_to_peak", "press_duration")
head(combined)
combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness, na.rm = TRUE))\
combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness, na.rm = TRUE))
View(combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness, na.rm = TRUE)))
condition_parti_correct_mean <-
View(combined)
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5) +
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5)
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth10)
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 10)
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 1)
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = .5)
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = .05)
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness*100, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 5) +
labs(title="Percentage correct",x="Weight(kg)", y = "Count")
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness*100, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 3) +
labs(title="Percentage correct",x="Weight(kg)", y = "Count")
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness*100, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 2) +
labs(title="Percentage correct",x="Weight(kg)", y = "Count")
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness*100, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 4) +
labs(title="Percentage correct",x="Weight(kg)", y = "Count")
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness*100, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 5) +
labs(title="Percentage correct",x="Weight(kg)", y = "Count")
combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(combined, aes(x=rt, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness*100, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 5) +
geom_density(alpha=0.6) +
labs(title="Percentage correct plot",x="Correct (%)", y = "Count")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(combined, aes(x=rt, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean
View(combined)
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 1000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 10000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 1000000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 50000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 50000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 20000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 80000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
head(combined)
peak_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(peak_mean= mean(time_to_peak, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_peak = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
peak_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(peak_mean= mean(time_to_peak, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_peak = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 10000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
peak_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(peak_mean= mean(time_to_peak, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_peak = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
peak_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(peak_mean= mean(time_to_peak, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_peak = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 50000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed")+
theme(legend.position="top")
correct_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(correct_mean= mean(correctness*100, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_correct = mean(correctness*100, na.rm = TRUE))
ggplot(correct_mean, aes(x=correct_mean, color=stimuli)) +
geom_histogram(fill="white", position="identity", alpha=0.5, binwidth = 5) +
labs(title="Percentage correct plot",x="Correct (%)", y = "Count") +
geom_vline(data=group_mean, aes(xintercept=mean_correct, color=stimuli),
linetype="dashed")
rt_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(rt_mean= mean(rt, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_rt = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 80000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed") +
labs(title="Average RT plot",x="Correct (%)", y = "Count") +
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 80000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_rt, color=stimuli),
linetype="dashed") +
labs(title="Average RT plot",x="Correct (%)", y = "Count")
peak_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(peak_mean= mean(time_to_peak, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_peak = mean(rt, na.rm = TRUE))
ggplot(rt_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 50000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed")
View(peak_mean)
duration_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(duration_mean = mean(pressure_duration, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_duration = mean(pressure_duration, na.rm = TRUE))
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 50000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed")
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed")
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 1000000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed")
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed")
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 500000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed")
peak_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(peak_mean= mean(time_to_peak, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_peak = mean(rt, na.rm = TRUE))
ggplot(peak_mean, aes(x=rt_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 50000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed") +
labs(title="Average RT plot",x="RT (Micro Second)", y = "Count")
View(rt_mean)
ggplot(peak_mean, aes(x=peak_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 50000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed") +
labs(title="Average RT plot",x="RT (Micro Second)", y = "Count")
ggplot(peak_mean, aes(x=peak_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 100000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_peak, color=stimuli),
linetype="dashed") +
labs(title="Average RT plot",x="RT (Micro Second)", y = "Count")
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 500000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed") +
labs(title="Average Press Time plot",x="Press Time (Micro Second)", y = "Count")
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 500000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed") +
labs(title="Average Press Time plot",x="Press Time (Micro Second)", y = "Count")
duration_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(duration_mean = mean(pressure_duration, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_duration = mean(pressure_duration, na.rm = TRUE))
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 500000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration
duration_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(duration_mean = mean(pressure_duration, na.rm = TRUE))
duration_mean <- combined %>%group_by(stimuli, parti_number) %>% summarize(duration_mean = mean(pressure_duration, na.rm = TRUE))
group_mean <- combined %>%group_by(stimuli) %>% summarize(mean_duration = mean(pressure_duration, na.rm = TRUE))
ggplot(duration_mean, aes(x=duration_mean, color=stimuli)) +
geom_histogram(fill="white", binwidth = 500000, position="identity", alpha=0.5) +
geom_density(alpha=0.6) +
geom_vline(data=group_mean, aes(xintercept=mean_duration, color=stimuli),
linetype="dashed") +
labs(title="Average Press Time plot",x="Press Time (Micro Second)", y = "Count")
